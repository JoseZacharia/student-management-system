/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sms;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author JOSE BOSS
 */
public class teachermenu extends javax.swing.JFrame {

    /**
     * Creates new form teachermenu
     */
 
    public static String sid,sub,subid,exam;
    private String input;
    public teachermenu() {
        try {
            initComponents();
            SMS.rs=SMS.stmt.executeQuery("select subcode,subname from Subject where tid='"+SMS.uid+"'");
            SMS.rs.next();
            subid=SMS.rs.getString(1);
            sub=SMS.rs.getString(2);
            subcode.setText(subid);
            subname.setText(sub);
            //subname.setText
        } catch (SQLException ex) {
            Logger.getLogger(teachermenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        subcode = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        subname = new javax.swing.JLabel();
        studlist = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("TEACHER MENU");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("CODE");

        subcode.setText("jLabel3");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("SUBJECT");

        subname.setText("jLabel3");

        studlist.setText("Student List");
        studlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studlistActionPerformed(evt);
            }
        });

        jButton2.setText("Marks");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Attendance");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(subname, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(subcode, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studlist, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(subcode, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(subname, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(studlist)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new login().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void studlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studlistActionPerformed
        try {
            // TODO add your handling code here:
            SMS.rs=SMS.stmt.executeQuery("select sid,name,to_char(dob,'DD-MM-YYYY') as DOB,gender,phoneno,email,emgyno,address,cgpa from student where coursecode=(select coursecode from course_subject where subcode=(select subcode from subject where tid='"+SMS.uid+"')) order by sid");
            SMS.disptable(SMS.rs);
        } catch (SQLException ex) {
            //Logger.getLogger(teachermenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_studlistActionPerformed

    private void tviewmarks() {                                           
        try {
            // TODO add your handling code here:
            exam=SMS.exammenu();
            int r=SMS.specify();
            if(r==0)
            {
                SMS.sid=JOptionPane.showInputDialog("Enter Student ID","").toUpperCase();
                int a=SMS.tcheck_sid(SMS.sid,SMS.uid);
                if(a==1)
                {
                    SMS.rs=SMS.stmt.executeQuery("select student.sid,name,marks from student,subject,exam,writes_exam where subject.tid='"+SMS.uid+"' and student.sid=writes_exam.sid and student.sid='"+SMS.sid+"' and exam.examname='"+exam+"' and exam.examid=writes_exam.examid and exam.subcode=subject.subcode");     
                    SMS.disptable(SMS.rs);
                }
                else
                    JOptionPane.showMessageDialog(null,"Invalid Student ID","",JOptionPane.WARNING_MESSAGE);
                
            }
            else 
            {
                SMS.rs=SMS.stmt.executeQuery("select Student.sid, name,marks from Student,subject,exam,writes_exam where Student.sid=writes_exam.sid and subject.tid='"+SMS.uid+"' and exam.examname='"+exam+"' and exam.examid=writes_exam.examid and exam.subcode=subject.subcode ORDER BY SID");
                SMS.disptable(SMS.rs);
            }
        } catch (Exception ex) {
            //Logger.getLogger(teachermenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                          

                                          

    private void tviewatt() {                                         
        try {
            // TODO add your handling code here:
            int r=SMS.specify();
            if(r==0)
            {
                SMS.sid=JOptionPane.showInputDialog("Enter Student ID","").toUpperCase();
                int a=SMS.tcheck_sid(SMS.sid,SMS.uid);
                if(a==1)
                {
                    SMS.rs=SMS.stmt.executeQuery("select student.sid,name,attpercent,abovethreshold from student,attends_subject where student.sid=attends_subject.sid and student.sid='"+SMS.sid+"' and attends_subject.subcode='"+subid+"'");
                    SMS.disptable(SMS.rs);
                }
                else
                    JOptionPane.showMessageDialog(null,"Invalid Student ID","",JOptionPane.WARNING_MESSAGE);
                
            }
            else 
            {
                SMS.rs=SMS.stmt.executeQuery("select student.sid,name,attpercent,abovethreshold from student,attends_subject where student.sid=attends_subject.sid and attends_subject.subcode='"+subid+"'");
                SMS.disptable(SMS.rs);
            }
        } catch (Exception ex) {
           // Logger.getLogger(teachermenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                        

    private void modatt() {                                       
        try {
            // TODO add your handling code here:
            String thr;
            SMS.sid=JOptionPane.showInputDialog("Enter Student ID","").toUpperCase();
            int a=SMS.tcheck_sid(SMS.sid,SMS.uid);
            if(a==1)
            {
                String num=JOptionPane.showInputDialog("Enter new attendance percent","");
                int att=Integer.parseInt(num);
                if(SMS.checkatt(att)==1)
                {
                    thr=SMS.checkthr(att);
                    SMS.stmt.executeUpdate("update attends_subject set attpercent="+num+",abovethreshold='"+thr+"' where sid='"+SMS.sid+"' and subcode='"+subid+"'"); 
                    if(SMS.stmt.getUpdateCount()>0)
                        JOptionPane.showMessageDialog(null,"Attendance Updated");
                }
                else
                    JOptionPane.showMessageDialog(null,"Invalid Attendance","",JOptionPane.WARNING_MESSAGE);
           
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Invalid Student ID","",JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
            //Logger.getLogger(teachermenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            //Logger.getLogger(teachermenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                      

    private void modifymark() {                                           
        try {
            // TODO add your handling code here:
            SMS.sid=JOptionPane.showInputDialog("Enter Student ID","").toUpperCase();
            int a=SMS.tcheck_sid(SMS.sid,SMS.uid);
            if(a==1)
            {
                exam=SMS.exammenu();
                int num=Integer.parseInt(JOptionPane.showInputDialog("Enter new marks",""));
                int max=SMS.getmax(exam);
                if(num>=0 & num<=max)
                {
                    SMS.stmt.executeUpdate("update writes_exam set marks="+num+" where sid='"+SMS.sid+"' and examid=(select examid from exam where subcode='"+subid+"' and examname='"+exam+"')");
                    
                    
                    if(SMS.stmt.getUpdateCount()>0)
                    {
                        float cgpa=SMS.calc_cgpa(SMS.sid);
                        System.out.println(cgpa);
                        SMS.stmt.executeUpdate("update Student set cgpa='"+cgpa+"' where sid='"+SMS.sid+"'");
                        SMS.rs=SMS.stmt.executeQuery("select cgpa from student where sid='"+SMS.sid+"'");
                        SMS.rs.next();
                        cgpa=SMS.rs.getFloat(1);
                        JOptionPane.showMessageDialog(null,"Marks Updated. New CGPA: "+cgpa);
                    }
                        //JOptionPane.showMessageDialog(null,"Marks Updated");
                        
                    
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Invalid Marks","",JOptionPane.WARNING_MESSAGE);
                }
                    
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Invalid Student ID","",JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
          //  Logger.getLogger(teachermenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            //Logger.getLogger(teachermenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                     
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String[] options=new String[]{"View","Modify"};
        int r = JOptionPane.showOptionDialog(null, "Choose the option", "MARKS",
            JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE,
            null, options, options[0]);
        if(r==0)
            tviewmarks();
        else if(r==1)
            modifymark();
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String[] options=new String[]{"View","Modify"};
        int r = JOptionPane.showOptionDialog(null, "Choose the option", "ATTENDANCE",
            JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE,
            null, options, options[0]);
        if(r==0)
            tviewatt();
        else if(r==1)
            modatt();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teachermenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teachermenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teachermenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teachermenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new teachermenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton studlist;
    private javax.swing.JLabel subcode;
    private javax.swing.JLabel subname;
    // End of variables declaration//GEN-END:variables
}
